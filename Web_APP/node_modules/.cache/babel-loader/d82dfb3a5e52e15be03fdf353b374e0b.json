{"ast":null,"code":"var _jsxFileName = \"/home/premnath/react_js_app/hello-react/src/components/FileUpload.js\";\nimport React from 'react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      return Object.keys(this.sd.Data[29].result);\n    };\n\n    this.getHeader = function () {\n      return Object.Header(this.sd.Data[29].result);\n    };\n\n    this.getRowsData = function () {};\n\n    this.state = {\n      imageURL: ''\n    };\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.displayImage = this.displayImage.bind(this);\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n    this.sd = this.getKeys.bind(this);\n  }\n\n  displayImage(ev) {\n    ev.preventDefault();\n\n    if (ev.target.files && ev.target.files[0]) {\n      this.setState({\n        imageURL: URL.createObjectURL(ev.target.files[0])\n      });\n    }\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://192.168.225.26:3001/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        alert(body.Data[29].result);\n        this.sd = body;\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleUploadImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      onChange: this.displayImage,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Upload\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"target\",\n      src: this.state.imageURL,\n      height: \"300vmin\",\n      height: \"300vmin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.getRowsData()))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/premnath/react_js_app/hello-react/src/components/FileUpload.js"],"names":["React","Main","Component","constructor","props","getKeys","Object","keys","sd","Data","result","getHeader","Header","getRowsData","state","imageURL","handleUploadImage","bind","displayImage","ev","preventDefault","target","files","setState","URL","createObjectURL","data","FormData","append","uploadInput","fetch","method","body","then","response","json","alert","render","ref"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageURL: '',\n    };\n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.displayImage = this.displayImage.bind(this);\nthis.getHeader = this.getHeader.bind(this);\n this.getRowsData = this.getRowsData.bind(this);\n this.getKeys = this.getKeys.bind(this);\nthis.sd = this.getKeys.bind(this);\n  }\n\n  displayImage(ev){\n    ev.preventDefault();\n    if (ev.target.files && ev.target.files[0]) {\n      this.setState({\n        imageURL: URL.createObjectURL(ev.target.files[0])\n      });\n    }\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n\n    fetch('http://192.168.225.26:3001/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n       alert(body.Data[29].result);\n\tthis.sd = body;\n      });\n    });\n  }\n\n\tgetKeys = function(){\n\t\treturn Object.keys(this.sd.Data[29].result);\n\t }\n\t \n\t getHeader = function(){\n\t \treturn Object.Header(this.sd.Data[29].result);\n\t }\n\t \n\t getRowsData = function(){\n\t \n\t }\n\n  render() {\n    return (\n      <form onSubmit={this.handleUploadImage} >\n        <div>\n          <input ref={(ref) => { this.uploadInput = ref; }} onChange={this.displayImage} type=\"file\" />\n        </div>\n        <br />\n        <div>\n          <button>Upload</button>\n        </div>\n        <br />\n            <img id=\"target\" src={this.state.imageURL} height=\"300vmin\"  height=\"300vmin\" />\n\t\t<div>\n\t\t <table>\n\t\t <thead>\n\t\t <tr>{this.getHeader()}</tr>\n\t\t </thead>\n\t\t <tbody>\n\t\t {this.getRowsData()}\n\t\t </tbody>\n\t\t </table>\n\t\t </div>\n     </form>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}